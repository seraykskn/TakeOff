@model DataModel.Product

         

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MasterLayout.cshtml";

}

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @*<div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*<script src="~/Scripts/jquery-1.7.1.min.js"></script>
        <script type="text/javascript">
            function show(input) {
                if (input.files && input.files[0]) {
                    var filerdr = new FileReader();
                    filerdr.onload = function (e) {
                        $('#user_img').attr('src', e.target.result);
                    }
                    filerdr.readAsDataURL(input.files[0]);
                }
            }
        </script>*@



        @using(Html.BeginForm("Create", "Product",null, FormMethod.Post, new {
    enctype = "multipart/form-data" }))
{ 
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
    <fieldset>
        <legend>Image</legend>
        <div class="editor-label">
            @Html.LabelFor(model =>model.ImageUrl)
        </div>
        <div class="editor-field">
            <input id="Image" title="Upload a product image"
                   type="file" name="file" />
        </div>
        @*<div>
            <img id = "user_img"
            height = "100"
            width = "90"
            style = "border:solid"/>
            </div>
            <div>
                <input type="file" title="search image" id="file" name="file" onchange="show(this)"/>
            </div>*@
        <div class="form-group">
            <label class="label">Name</label>
            <div class="input-group">
                @*<input type="text" class="form-control" placeholder="Username">*@
                @*<input class="form-control" id="email" name="email" placeholder="Email" type="email" required />*@
                @Html.TextBox("ProductName", null, new { @class = "form-control", @style = "color:blue;", @placeholder = "Name" })

                <div class="input-group-append">
                    <span class="input-group-text">
                        <i class="mdi mdi-check-circle-outline"></i>
                    </span>
                </div>
            </div>
        </div>
       
        <div class="form-group">
            <label class="label">Place</label>
            <div class="input-group">
                @*<input class="form-control" id="password" name="password" placeholder="*********" type="password" required>*@
                @Html.TextBox("Place", null, new { @class = "form-control", @style = "color:blue;", @placeholder = "Place" })
                <div class="input-group-append">
                    <span class="input-group-text">
                        <i class="mdi mdi-check-circle-outline"></i>
                    </span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="label">Price</label>
            <div class="input-group">
                @*<input class="form-control" id="password" name="password" placeholder="*********" type="password" required>*@
                @Html.TextBox("Price", null, new { @class = "form-control", @style = "color:blue;", @placeholder = "Price" })
                <div class="input-group-append">
                    <span class="input-group-text">
                        <i class="mdi mdi-check-circle-outline"></i>
                    </span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="label">Comment</label>
            <div class="input-group">
                @*<input class="form-control" id="password" name="password" placeholder="*********" type="password" required>*@
                @Html.TextBox("Comment", null, new { @class = "form-control", @style = "color:blue;", @placeholder = "Comment" })
                <div class="input-group-append">
                    <span class="input-group-text">
                        <i class="mdi mdi-check-circle-outline"></i>
                    </span>
                </div>
            </div>
        </div>
        <p><input type="submit" value="Oluştur" /></p>
    </fieldset>
}

                @*<div class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                        </div>
                    </div>*@


</div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>